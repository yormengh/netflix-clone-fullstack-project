name: Terraform Validation Pipeline

on:
  pull_request:
    branches: [ dev, staging, main ]
    paths:
      - infra/**/*.tf
      - infra/**/*.tfvars.*
      - '!.github/dependabot.yml'
      - '!.github/workflows/terraform-cd.yml'
      - '!.github/workflows/terraform-ci.yml'
      - '!.github/workflows/security-dashboard.yml'
      - '!.github/ISSUE_TEMPLATE/security-incident.yml'
      - '!docs/**'
      - '!policies/**'
      - '!tests/**'
      - '!README.md'
      - '!.gitignore'

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write
  checks: write

defaults:
  run:
    working-directory: infra

jobs:
  validate:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.base_ref }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Tools
        run: |
          pip install checkov
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod 755 ./opa
          sudo mv opa /usr/local/bin/

      - name: Configure AWS Credentials for Tests
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: eu-west-1
          role-session-name: GitHubActions

      - name: Terraform Init
        run: terraform init

      - name: Select Workspace
        run: terraform workspace select -or-create $WORKSPACE

      - name: Terraform Format
        run: |
          echo "Formatting Terraform files..."
          terraform fmt -recursive
          echo "Checking if files are properly formatted..."
          terraform fmt -check -recursive || {
            echo "::error::Some files are not properly formatted. The format command has fixed them. Please commit the changes.";
            git diff;
            exit 1;
          }

      - name: Terraform Validate
        run: terraform validate

      - name: Run Checkov Tests
        run: checkov -d . --quiet

      - name: Run OPA Checks
        run: |
          echo "Running OPA tests..."
          if ! make test-opa 2>&1 | tee opa_output.log; then
            echo "OPA test failed. Full output:"
            cat opa_output.log
            echo "::error::OPA policy violations found"
            exit 1
          fi

      - name: Run Terraform Test
        run: terraform test -var-file="environments/terraform.tfvars.$WORKSPACE"

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: "Validation for ${{ github.base_ref }} environment ${{ job.status }}!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          